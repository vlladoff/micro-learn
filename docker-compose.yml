  version: '3.8'

  services:
    kafka:
      image: apache/kafka:3.7.0
      hostname: kafka
      container_name: micro-learn-kafka
      ports:
        - "9092:9092"
      environment:
        # KRaft single node mode
        KAFKA_NODE_ID: 1
        KAFKA_PROCESS_ROLES: 'broker,controller'
        KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'

        # Простые listeners для single node
        KAFKA_LISTENERS: 'PLAINTEXT://:29092,CONTROLLER://:9093,PLAINTEXT_HOST://:9092'
        KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
        KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
        KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'

        # Single node cluster ID
        CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'

        # Минимальные настройки для single node
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_DEFAULT_REPLICATION_FACTOR: 1
        KAFKA_MIN_IN_SYNC_REPLICAS: 1

        # Простые настройки
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
        KAFKA_NUM_PARTITIONS: 1
      volumes:
        - kafka-data:/tmp/kraft-combined-logs
      networks:
        - micro-learn-network

    kafka-ui:
      image: obsidiandynamics/kafdrop:latest
      container_name: micro-learn-kafka-ui
      ports:
        - "8090:9000"
      environment:
        KAFKA_BROKERCONNECT: kafka:29092
        JVM_OPTS: "-Xms32M -Xmx64M"
        SERVER_SERVLET_CONTEXTPATH: "/"
      command: ["sh", "-c", "sleep 15 && /kafka-ui"]
      networks:
        - micro-learn-network

    app:
      build:
        context: .
        dockerfile: Dockerfile
      container_name: micro-learn-app
      ports:
        - "8080:8080"
      environment:
        - KAFKA_BROKERS=kafka:29092
        - KAFKA_TOPIC=job-events
        - KAFKA_CONSUMER_GROUP=job-service
        - LOG_LEVEL=info
      command: ["sh", "-c", "sleep 15 && /app"]
      networks:
        - micro-learn-network

  networks:
    micro-learn-network:
      driver: bridge
      name: micro-learn-network

  volumes:
    kafka-data:
      driver: local